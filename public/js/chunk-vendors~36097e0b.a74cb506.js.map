{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/services/theme/utils.js","webpack:///./node_modules/vuetify/lib/services/theme/index.js"],"names":["parse","theme","isItem","anchor","variant","colors","Object","keys","parsedTheme","i","length","name","value","startsWith","genVariations","base","primary","genBaseColor","genVariantColor","type","n","split","genColorVariableName","genColorVariable","genStyles","cssVar","variablesCss","css","aColor","variants","variantValue","values","lighten","darken","amount","lab","options","super","this","disabled","themes","light","secondary","accent","error","info","success","warning","dark","defaults","isDark","vueInstance","vueMeta","disable","Boolean","fillVariant","val","isVueMeta23","applyVueMeta23","checkOrCreateStyleElement","styleEl","innerHTML","oldDark","applyTheme","clearCss","generatedStyles","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","assign","document","getElementById","genStyleElement","defaultTheme","createElement","id","cspNonce","setAttribute","head","appendChild","$nextTick","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","cssText","push","nonce","set","addApp","$destroy","data","watch","immediate","deep","handler","target","themeCache","get","customProperties","minifyTheme","currentTheme","property"],"mappings":"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","file":"js/chunk-vendors~36097e0b.a74cb506.js","sourcesContent":["import { colorToInt, intToHex, colorToHex } from '../../util/colorUtils';\nimport * as sRGB from '../../util/color/transformSRGB';\nimport * as LAB from '../../util/color/transformCIELAB';\nexport function parse(theme, isItem = false) {\n  const {\n    anchor,\n    ...variant\n  } = theme;\n  const colors = Object.keys(variant);\n  const parsedTheme = {};\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i];\n    const value = theme[name];\n    if (value == null) continue;\n\n    if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value);\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true);\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value));\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\n  }\n\n  return parsedTheme;\n}\n/**\n * Generate the CSS for a base color (.primary)\n */\n\nconst genBaseColor = (name, value) => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`;\n};\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\n\n\nconst genVariantColor = (name, variant, value) => {\n  const [type, n] = variant.split(/(\\d)/, 2);\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`;\n};\n\nconst genColorVariableName = (name, variant = 'base') => `--v-${name}-${variant}`;\n\nconst genColorVariable = (name, variant = 'base') => `var(${genColorVariableName(name, variant)})`;\n\nexport function genStyles(theme, cssVar = false) {\n  const {\n    anchor,\n    ...variant\n  } = theme;\n  const colors = Object.keys(variant);\n  if (!colors.length) return '';\n  let variablesCss = '';\n  let css = '';\n  const aColor = cssVar ? genColorVariable('anchor') : anchor;\n  css += `.v-application a { color: ${aColor}; }`;\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`);\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i];\n    const value = theme[name];\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`);\n    const variants = Object.keys(value);\n\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i];\n      const variantValue = value[variant];\n      if (variant === 'base') continue;\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue);\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`);\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`;\n  }\n\n  return variablesCss + css;\n}\nexport function genVariations(name, value) {\n  const values = {\n    base: intToHex(value)\n  };\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i));\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i));\n  }\n\n  return values;\n}\nexport function lighten(value, amount) {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\n//# sourceMappingURL=utils.js.map","/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as ThemeUtils from './utils'; // Types\n\nimport Vue from 'vue';\nexport class Theme extends Service {\n  constructor(options = {}) {\n    super();\n    this.disabled = false;\n    this.themes = {\n      light: {\n        primary: '#1976D2',\n        secondary: '#424242',\n        accent: '#82B1FF',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      dark: {\n        primary: '#2196F3',\n        secondary: '#424242',\n        accent: '#FF4081',\n        error: '#FF5252',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      }\n    };\n    this.defaults = this.themes;\n    this.isDark = null;\n    this.vueInstance = null;\n    this.vueMeta = null;\n\n    if (options.disable) {\n      this.disabled = true;\n      return;\n    }\n\n    this.options = options.options;\n    this.dark = Boolean(options.dark);\n    const themes = options.themes || {};\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false)\n    };\n  } // When setting css, check for element\n  // and apply new values\n\n\n  set css(val) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23();\n      }\n\n      return;\n    }\n\n    this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n  }\n\n  set dark(val) {\n    const oldDark = this.isDark;\n    this.isDark = val; // Only apply theme after dark\n    // has already been set before\n\n    oldDark != null && this.applyTheme();\n  }\n\n  get dark() {\n    return Boolean(this.isDark);\n  } // Apply current theme default\n  // only called on client side\n\n\n  applyTheme() {\n    if (this.disabled) return this.clearCss();\n    this.css = this.generatedStyles;\n  }\n\n  clearCss() {\n    this.css = '';\n  } // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n\n\n  init(root, ssrContext) {\n    if (this.disabled) return;\n    /* istanbul ignore else */\n\n    if (root.$meta) {\n      this.initVueMeta(root);\n    } else if (ssrContext) {\n      this.initSSR(ssrContext);\n    }\n\n    this.initTheme();\n  } // Allows for you to set target theme\n\n\n  setTheme(theme, value) {\n    this.themes[theme] = Object.assign(this.themes[theme], value);\n    this.applyTheme();\n  } // Reset theme defaults\n\n\n  resetThemes() {\n    this.themes.light = Object.assign({}, this.defaults.light);\n    this.themes.dark = Object.assign({}, this.defaults.dark);\n    this.applyTheme();\n  } // Check for existence of style element\n\n\n  checkOrCreateStyleElement() {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n    /* istanbul ignore next */\n\n    if (this.styleEl) return true;\n    this.genStyleElement(); // If doesn't have it, create it\n\n    return Boolean(this.styleEl);\n  }\n\n  fillVariant(theme = {}, dark) {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light'];\n    return Object.assign({}, defaultTheme, theme);\n  } // Generate the style element\n  // if applicable\n\n\n  genStyleElement() {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    this.styleEl = document.createElement('style');\n    this.styleEl.type = 'text/css';\n    this.styleEl.id = 'vuetify-theme-stylesheet';\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce);\n    }\n\n    document.head.appendChild(this.styleEl);\n  }\n\n  initVueMeta(root) {\n    this.vueMeta = root.$meta();\n\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23();\n      });\n      return;\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n    const metaInfo = root.$options[metaKeyName] || {};\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || [];\n      const vuetifyStylesheet = metaInfo.style.find(s => s.id === 'vuetify-theme-stylesheet');\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce\n        });\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles;\n      }\n\n      return metaInfo;\n    };\n  }\n\n  applyVueMeta23() {\n    const {\n      set\n    } = this.vueMeta.addApp('vuetify');\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce\n      }]\n    });\n  }\n\n  initSSR(ssrContext) {\n    const options = this.options || {}; // SSR\n\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : '';\n    ssrContext.head = ssrContext.head || '';\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`;\n  }\n\n  initTheme() {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return; // If we get here somehow, ensure\n    // existing instance is removed\n\n    if (this.vueInstance) this.vueInstance.$destroy(); // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n    this.vueInstance = new Vue({\n      data: {\n        themes: this.themes\n      },\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme()\n        }\n      }\n    });\n  }\n\n  get currentTheme() {\n    const target = this.dark ? 'dark' : 'light';\n    return this.themes[target];\n  }\n\n  get generatedStyles() {\n    const theme = this.parsedTheme;\n    /* istanbul ignore next */\n\n    const options = this.options || {};\n    let css;\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme);\n      /* istanbul ignore if */\n\n      if (css != null) return css;\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties);\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css);\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css);\n    }\n\n    return css;\n  }\n\n  get parsedTheme() {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {};\n    return ThemeUtils.parse(theme);\n  } // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n\n  get isVueMeta23() {\n    return typeof this.vueMeta.addApp === 'function';\n  }\n\n}\nTheme.property = 'theme';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}