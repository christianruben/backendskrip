{"version":3,"sources":["webpack:///./src/_method/config.js","webpack:///./src/_method/login.js","webpack:///./src/_method/news.js","webpack:///./src/_method/index.js"],"names":["getHeaders","token","headers","getHeadersv2","config","endpoint","auth","getUrlParams","url","params","query","Object","keys","map","k","encodeURIComponent","join","getconfig","method","mode","window","$cookies","get","postdataconfig","data","result","body","JSON","stringify","postdatafile","putdatafile","putdataconfig","deletedataconfig","postconfig","deleteconfig","putconfig","authentication","username","password","callback","async","json","err","reqconf","fetch","response","fetchres","status","message","authenticationAdmin","checkup","then","res","resfetch","catch","login"],"mappings":"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","file":"js/app~daa6fc7a.ff84f9c9.js","sourcesContent":["// let token = localStorage.getItem(\"user\");\r\nfunction getHeaders(token){\r\n  let headers = !token ? {\r\n    'Access-Control-Allow-Origin':'*',\r\n    \"Content-Type\": \"application/json\",\r\n  } : {\r\n    'Access-Control-Allow-Origin':'*',\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": `${token}`\r\n  }\r\n  return headers\r\n}\r\nfunction getHeadersv2(token){\r\n  let headers = !token ? {\r\n    'Access-Control-Allow-Origin':'*',\r\n  } : {\r\n    'Access-Control-Allow-Origin':'*',\r\n    \"Authorization\": `${token}`\r\n  }\r\n  return headers\r\n}\r\nexport const config= {\r\n    endpoint: \"http://localhost:3000/api\",\r\n    auth: \"http://localhost:3000/authentication\",\r\n    getUrlParams: function(url,params){\r\n      let query = Object.keys(params).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&');\r\n      return `${url}?${query}`;\r\n    },\r\n    getconfig: function(){\r\n      return {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken'))\r\n      }\r\n    },\r\n    postdataconfig: function(data){\r\n      let result = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken')),\r\n        body: JSON.stringify(data)\r\n      }\r\n      return result\r\n    },\r\n    postdatafile: function(data){\r\n      let result = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: getHeadersv2(window.$cookies.get('apitoken')),\r\n        body: data\r\n      }\r\n      return result\r\n    },\r\n    putdatafile: function(data){\r\n      let result = {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        headers: getHeadersv2(window.$cookies.get('apitoken')),\r\n        body: data\r\n      }\r\n      return result;\r\n    },\r\n    putdataconfig: function(data){\r\n      let result = {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken')),\r\n        body: JSON.stringify(data)\r\n      }\r\n      return result;\r\n    },\r\n    deletedataconfig: function(data){\r\n      let result = {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken')),\r\n        body: JSON.stringify(data)\r\n      }\r\n      return result;\r\n    },\r\n    postconfig: {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken'))\r\n    },\r\n    deleteconfig: {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken'))\r\n    },\r\n    putconfig: {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        headers: getHeaders(window.$cookies.get('apitoken'))\r\n    }\r\n}\r\n","import { config } from './config';\r\n\r\nasync function authentication(username, password, callback){\r\n    let result = {\r\n        json: null,\r\n        err: null\r\n    }\r\n    let reqconf = config.postdataconfig({username: username, password: password})\r\n    try{\r\n        const response = await fetch(`${config.auth}/login`, reqconf)\r\n        const fetchres = await response.json()\r\n        if(response.status === 200){\r\n            result.json = fetchres\r\n        }else{\r\n            result.err = fetchres.message\r\n        }\r\n    }catch(err){\r\n        result.err = err\r\n    }\r\n    callback(result)\r\n}\r\n\r\nasync function authenticationAdmin(username, password, callback){\r\n    let result = {\r\n        json: null,\r\n        err: null\r\n    }\r\n    let reqconf = config.postdataconfig({username: username, password: password})\r\n    try{\r\n        const response = await fetch(`${config.auth}/admin/login`, reqconf)\r\n        const fetchres = await response.json()\r\n        if(response.status === 200){\r\n            result.json = fetchres\r\n        }else{\r\n            result.err = fetchres.message\r\n        }\r\n    }catch(err){\r\n        result.err = err\r\n    }\r\n    callback(result)\r\n}\r\n\r\nfunction checkup(callback){\r\n    let result = {\r\n        json: null,\r\n        err: null\r\n    }\r\n    fetch(`${config.auth}/check`, config.postdataconfig({})).then(res=>{\r\n        // fetch body response to json\r\n        return {status: res.status, json: res.json()};\r\n    }).then(resfetch=>{\r\n        if(resfetch.status === 200) result.json = resfetch.json;\r\n        else result.err = resfetch.json.message\r\n        callback(result);\r\n    }).catch(err=>{\r\n        result.err = err;\r\n        callback(result);\r\n    });\r\n}\r\n\r\nexport const login = {\r\n    authentication,\r\n    authenticationAdmin,\r\n    checkup\r\n}","import {config} from './config';\r\n\r\nfunction getNewsList({index, search}, callback){\r\n\tlet result = {\r\n\t\tjson: null,\r\n\t\terr: null\r\n\t}\r\n\tfetch(config.getUrlParams(`${config.endpoint}/news`, {'index':index, 'search': search}), config.getconfig).then(res=>{\r\n\t\treturn {status: res.status, json: res.json()};\r\n\t}).then(resfetch=>{\r\n\t\tif(resfetch.status === 200) result.json = resfetch.json;\r\n\t\telse result.err = resfetch.json.message;\r\n\t\tcallback(result);\r\n\t}).catch(err=>{\r\n\t\tresult.err = err;\r\n\t\tcallback(result);\r\n\t});\r\n}\r\n\r\nfunction loadNews(id, callback){\r\n\tlet result = {\r\n\t\tjson: null,\r\n\t\terr: null\r\n\t}\r\n\tfetch(`${config.endpoint}/news/${id}`, config.getconfig).then(res=>{\r\n\t\treturn {status: res.status, json: res.json()};\r\n\t}).then(resfetch=>{\r\n\t\tif(resfetch.status === 200) result.json = resfetch.json;\r\n\t\telse result.err = resfetch.json.message;\r\n\t\tcallback(result);\r\n\t}).catch(err=>{\r\n\t\tresult.err = err;\r\n\t\tcallback(result);\r\n\t});\r\n}\r\n\r\nfunction inputNews({title, content, id}, callback){\r\n\tlet result = {\r\n\t\tjson: null,\r\n\t\terr: null\r\n\t}\r\n\tfetch(`${config.endpoint}/news`, config.postdataconfig({title: title, content: content, id: id})).then(res=>{\r\n\t\treturn {status: res.status, json: res.json()};\r\n\t}).then(resfetch=>{\r\n\t\tif(resfetch.status === 200) result.json = resfetch.json;\r\n\t\telse result.err = resfetch.json.message;\r\n\t\tcallback(result);\r\n\t}).catch(err=>{\r\n\t\tresult.err = err;\r\n\t\tcallback(result);\r\n\t});\r\n}\r\n\r\nfunction deleteNews(id, callback){\r\n\tlet result = {\r\n\t\tjson: null,\r\n\t\terr: null\r\n\t}\r\n\tfetch(config.getUrlParams(`${config.endpoint}/news`, {'id': id}), config.deleteconfig).then(res=>{\r\n\t\treturn {status: res.status, json: res.json()};\r\n\t}).then(resfetch=>{\r\n\t\tif(resfetch.status === 200) result.json = resfetch.json;\r\n\t\telse result.err = resfetch.json.message;\r\n\t\tcallback(result);\r\n\t}).catch(err=>{\r\n\t\tresult.err = err;\r\n\t\tcallback(result);\r\n\t});\r\n}\r\n\r\nfunction updateNews({idNews, title, content}, callback){\r\n\tlet result = {\r\n\t\tjson: null,\r\n\t\terr: null\r\n\t}\r\n\tfetch(`${config.endpoint}/news`, config.putdataconfig({id: idNews, title: title, content: content})).then(res=>{\r\n\t\treturn {status: res.status, json: res.json()};\r\n\t}).then(resfetch=>{\r\n\t\tif(resfetch.status === 200) result.json = resfetch.json;\r\n\t\telse result.err = resfetch.json.message;\r\n\t\tcallback(result);\r\n\t}).catch(err=>{\r\n\t\tresult.err = err;\r\n\t\tcallback(result);\r\n\t});\r\n}\r\n\r\nexport const news = {\r\n\tgetNewsList,\r\n\tloadNews,\r\n\tinputNews,\r\n\tdeleteNews,\r\n\tupdateNews\r\n}","export * from './admin';\r\nexport * from './login';\r\nexport * from './news';\r\nexport * from './teacher';\r\nexport * from './student';\r\nexport * from './studies';\r\nexport * from './schedule';\r\nexport * from './time';"],"sourceRoot":""}