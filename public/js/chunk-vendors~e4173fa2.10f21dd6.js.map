{"version":3,"sources":["webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js"],"names":["defaults","utils","InterceptorManager","dispatchRequest","Axios","instanceConfig","this","interceptors","request","response","prototype","config","merge","url","arguments","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","data","module","exports","enhanceError","message","code","error","Error","value","__CANCEL__","createError","reject","validateStatus","status","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","cancelToken","throwIfRequested","baseURL","headers","transformRequest","common","adapter","transformResponse","reason","Cancel","toString","CancelToken","executor","TypeError","resolvePromise","token","source","cancel","c","settle","buildURL","parseHeaders","isURLSameOrigin","requestData","requestHeaders","isFormData","XMLHttpRequest","auth","username","password","Authorization","btoa","open","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onerror","ontimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","key","setRequestHeader","e","onDownloadProgress","addEventListener","onUploadProgress","upload","abort","send","fns","fn","bind","createInstance","defaultConfig","context","instance","extend","axios","create","all","promises","spread","default","handlers","use","eject","id","h"],"mappings":"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","file":"js/chunk-vendors~e4173fa2.10f21dd6.js","sourcesContent":["'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"sourceRoot":""}